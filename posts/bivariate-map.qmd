---
title: "Bivariate maps with R"
date: "2025-2-11"
image: assets/bivariate-map_bii_legend.png
image-alt:  bivariate raster map
categories: [R, cartography, spatial analysis, data visualization]
draft: true
---

Maps of raster (pixel) data can be very useful but typically you are limited to a displaying a single variable. Bivariate maps get around this by... 

```{r}
#| eval: false

# vector required packages
pkgs <- c("terra", "ggplot2", "dplyr", "ggspatial", "rnaturalearth",
          "rnaturalearthdata", "tidyterra", "extrafont", "magick", "biscale", "patchwork")

#load packages
lapply(pkgs, library, character.only = TRUE)

# custom plot theme
theme_publication <- function(
    base_size=14,
    base_family="Fira Sans"
) {
  (ggthemes::theme_foundation(
    base_size=base_size,
    base_family=base_family)+
     theme(
       plot.title = element_text(face = "bold",size = rel(1.2),hjust = 0.5),
       text = element_text(),
       panel.background = element_rect(colour = NA),
       plot.background = element_rect(colour = NA),
        panel.grid.major = element_blank(),
       panel.grid.minor = element_blank(),
       panel.border = element_rect(colour = NA),
       axis.title = element_text(face = "bold",size = rel(0.8)),
       axis.title.y = element_text(angle=90,vjust =2),
       axis.title.x = element_text(vjust = -0.2),
       axis.text = element_text(),
       axis.line = element_line(colour="black"),
       axis.ticks = element_line(),
       panel.grid.major = element_blank(),
       panel.grid.minor = element_blank(),
       legend.key = element_rect(colour = NA),
       legend.position = "bottom",
       legend.direction = "horizontal",
       legend.key.size= unit(0.5, "cm"),
       legend.title = element_text(face = "bold",
                                   hjust=0.5),
       plot.margin=unit(c(10,5,5,5),"mm"),
       strip.background=element_rect(colour="#f0f0f0",fill="#f0f0f0"),
       strip.text = element_text(face="bold")
     )
  )
}

# load files of biodiversity intactness index in 2000 and 2020
bio_2000 <- terra::rast("assets/bii-2000_v2-1-1.tif")
bio_2020 <- terra::rast("assets/bii-2020_v2-1-1.tif")

# subtract the 2020 layer from 2000
bio_diff <- bio_2020 - bio_2000

# get data of world map outline
world <- ne_countries(scale = "medium", returnclass = "sv")

# remove antarctica
world <- world[world$admin != "Antarctica", ]

# reproject world outline to match crs
world <- project(world, bio_diff)

# replace all values greater than 0 with 0
bio_diff[bio_diff > 0] <- 0

# Stack the difference layer and the 2000 layer
bi_var <- c(bio_diff, bio_2000)

# name the layers
names(bi_var) <- c("diff", "importance")

# convert to df
bi_var_df <- as.data.frame(bi_var, xy = TRUE)

# convert to absolute values
bi_var_df$diff <- abs(bi_var_df$diff)

# normalise the diff values to be between 0 and 1 such that values approaching
# 0 are the lowest and the greatest negative values are the highest
bi_var_df$diff <- scales::rescale(bi_var_df$diff, to = c(0, 1))

# vector the number of classes to be used for breaks
num_class <- 3

# classify both the difference and importance measures
bi_var_class <- bi_class(bi_var_df,
                           x = diff,
                           y = importance,
                           style = "quantile",
                           dim = num_class)

# Create quantile breaks
bi_var_breaks <-  bi_class_breaks(bi_var_df,
                                    x = diff, 
                                    y = importance, 
                                    style = "quantile",
                                    dim = num_class,
                                    dig_lab = 2,
                                    split = FALSE)

# Set up a colour palette
pallet <- "DkViolet2"

# Create bivariate map
bi_var_map <- ggplot() +
  geom_raster(data = bi_var_class,
              aes(x = x,
                  y = y,
                  fill = bi_class),
              show.legend = FALSE)+
  bi_scale_fill(pal = pallet,
                dim = num_class,
                flip_axes = FALSE,
                rotate_pal = FALSE,
                na.value = "#F2F2F2",
                aes(alpha = 0.5)) +
  theme(axis.text = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.ticks = element_blank(),
        panel.grid = element_blank(),
        axis.line = element_blank(),
        panel.border = element_rect(colour = NA),
        panel.background = element_rect(fill='transparent'),
        plot.background = element_rect(fill='transparent', color=NA))

plot(bi_var_map)
ggsave("assets/biodiversity_map.png",
       plot = bi_var_map,
       width = 34,
       height = 19,
       dpi = 600, 
       units = "cm",
       bg = "transparent")

# Create the legend for the bivariate map
bi_var_legend <- bi_legend(pal = pallet,   
                             flip_axes = FALSE,
                             rotate_pal = FALSE,
                             dim = num_class,
                             breaks = bi_var_breaks,
                             xlab = "Decline in Biodiversity Intactness 2000-2020",
                             ylab = "Biodiversity Intactness in 2000",
                             arrow = FALSE)+
  theme(text = element_text(size = 4, family = "FiraSans"),
        axis.line = element_line(arrow = arrow(angle = 30,
                                               length = unit(0.15, "inches"),
                                               ends = "last", 
                                               type = "closed"), 
                                 ), 
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        axis.title.x = element_text(size = 6,
                                    face = "bold",
                                    vjust = -0.5),
        axis.title.y = element_text(size = 6,
                                    face = "bold",
                                    vjust = 1.5, 
                                    angle = 90),
        panel.background = element_rect(fill='transparent'),
        plot.background = element_rect(fill='transparent', color=NA))

plot(bi_var_legend)

# combine using patchwork
bi_var_map_legend <- bi_var_map +
  # legend inset on left
  inset_element(bi_var_legend,
                left = 0,
                bottom = 0,
                right = 0.2,
                top = 0.45,
                align_to = 'full')

# save the map
ggsave("assets/biodiversity_intactness_map.svg",
       plot = bi_var_map_legend,
       width = 34,
       height = 19,
       dpi = 600, 
       units = "cm",
       bg = "transparent")

```